name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.16.1'
      - name: Install dependencies
        run: yarn install
      - name: Run ci tests
        run: yarn ci

  provider-pact:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout API code
        uses: actions/checkout@v2
        with:
          path: api
          repository: overkilling/overkill-todo-monolith-api
      - name: Checkout SPA code
        uses: actions/checkout@v2
        with:
          path: spa
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.16.1'
      - name: Install dependencies
        run: yarn install
        working-directory: spa
      - name: Generate pact
        run: yarn pact
        working-directory: spa
      - name: Copies pact
        run: cp -v spa/pacts/*.json api/pact/
      - name: Run provider side of pact tests
        run: PACT_URL=/pact/spa-api.json make pact
        working-directory: api

  build-and-push-container:
    runs-on: ubuntu-latest
    needs: [test, provider-pact]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build and push docker image
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: overkilling/overkill-todo-spa-frontend/spa
          tag_with_ref: true
          tag_with_sha: true
      - name: Set IMAGE_VERSION
        run: echo ::set-env name=IMAGE_VERSION::$(echo sha-$(git rev-parse --short HEAD))
      - name: Notify infrastructure of new image
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.BOT_TOKEN }}
          repository: overkilling/overkill-todo-infrastructure
          event-type: new-image-version
          client-payload: '{"repository": "${{ github.repository }}", "image_version": "${{ env.IMAGE_VERSION }}"}'
